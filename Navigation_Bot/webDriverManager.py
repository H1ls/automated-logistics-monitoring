import time
import json
import pickle
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException

"""6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebDriver"""


class WebDriverManager:
    def __init__(self, log_func=None):
        self.log = log_func or print
        self.config_path = "config/config.json"
        self.cookies_path = "config/cookies.pkl"
        self.driver = None

    def web_driver_wait(self, xpath, timeout=10):
        return WebDriverWait(self.driver, timeout).until(
            EC.visibility_of_element_located((By.XPATH, xpath))
        )

    def start_browser(self):
        self.driver = webdriver.Chrome()
        self.driver.maximize_window()
        self.log("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω.")

    def save_cookies(self):
        with open(self.cookies_path, "wb") as file:
            pickle.dump(self.driver.get_cookies(), file)

    def load_cookies(self):
        try:
            with open(self.cookies_path, "rb") as file:
                cookies = pickle.load(file)
            for cookie in cookies:
                self.driver.add_cookie(cookie)
            self.log("–ö—É–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
        except FileNotFoundError:
            self.log("–§–∞–π–ª cookies.pkl –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")

    def open_wialon(self):
        self.driver.get("https://wialon.rtmglonass.ru/?lang=ru")
        self.load_cookies()
        self.driver.refresh()
        self.log("–í–∏–∞–ª–æ–Ω –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è")
        time.sleep(5)

    def setup_wialon(self):
        try:
            self.web_driver_wait("//*[@id='hb_mi_monitoring']").click()
        except:
            self.log(f'–≤ "class WebDriverManager -> setup_wialon"\n –ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ class=hb_item_text')

    def login_wialon(self):
        """–ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è –≤ Wialon, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö cookies"""
        with open(self.config_path, "r", encoding="utf-8") as f:
            data = json.load(f)
        username = data["username"]
        password = data["password"]

        self.driver.get("https://wialon.rtmglonass.ru/?lang=ru")

        self.web_driver_wait("//*[@data-testid='LoginMainEmailInput']").send_keys(username)
        self.web_driver_wait("//*[@data-testid='LoginMainPassInput']").send_keys(password)

        login_button = WebDriverWait(self.driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//*[@data-testid='LoginMainSubmitButton']"))
        )
        login_button.click()

        self.log("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Wialon")
        self.save_cookies()
        self.log("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Wialon...")

    def open_yandex_maps(self):
        self.log("üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç...")

        try:
            # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –≤—Ç–æ—Ä–æ–π –≤–∫–ª–∞–¥–∫–∏
            if len(self.driver.window_handles) > 1:
                self.driver.switch_to.window(self.driver.window_handles[1])
                self.log("üîÅ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞–º–∏.")
            else:
                self.log("‚ûï –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏...")
                self.driver.execute_script("window.open('https://yandex.ru/maps', '_blank');")
                time.sleep(1)
                self.driver.switch_to.window(self.driver.window_handles[-1])

            # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            WebDriverWait(self.driver, 10).until(
                EC.presence_of_element_located((By.TAG_NAME, "body"))
            )
            self.driver.get("https://yandex.ru/maps")
            time.sleep(3)

        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç: {e}")

    def switch_to_yandex_tab(self, log_func=None):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ URL"""
        for handle in self.driver.window_handles:
            self.driver.switch_to.window(handle)
            current_url = self.driver.current_url
            if "yandex.ru/maps" in current_url:
                if log_func:
                    log_func("üîÅ –ù–∞–π–¥–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è.")
                return True
        return False
