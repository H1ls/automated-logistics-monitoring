import requests
import json


def ask_ollama(prompt: str) -> dict:
    url = "http://localhost:11434/api/generate"
    payload = {
        "model": "deepseek-llm:latest",
        "prompt": prompt,
        "stream": False
    }
    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
        json_resp = response.json()
        # Получаем ответ текстом — смотри, как именно API возвращает результат!
        answer_text = json_resp.get("response") or json_resp.get("results", [{}])[0].get("text", "")
        print("Ответ модели (сырой текст):", repr(answer_text))

        # Парсим JSON из текста
        return json.loads(answer_text)
    except Exception as e:
        print(f"Ошибка при запросе к Ollama или парсинге JSON: {e}")
        return {}


if __name__ == "__main__":
    user_text = """1) 14.02.2025 08:00 Кировская обл., г. Киров, ул. Дзержинского, д. 79 А Транзит 12 ч!!!
2) 15.02.2025 09:00 Нижегородская обл., п. Кудьма, ул. Индустриальная, д. 13"""

    prompt_template = """
Текст для разбора:
<<TEXT>>

Задача — извлечь из текста все блоки выгрузок или погрузок с датой, временем, адресом, координатами и остальным.

Правила:
1. Вывести только JSON с ключом "Выгрузка" или "Погрузка" (в зависимости от содержимого).
2. Значение — массив объектов с ключами:
   - "Выгрузка N" или "Погрузка N" — адрес, без лишних слов.
   - "Дата N" — дата в формате ДД.ММ.ГГГГ (если год не указан, ставь текущий).
   - "Время N" — время в формате ЧЧ:ММ:СС (если нет, ставь "00:00:00").
   - "Координаты N" — координаты, если есть, в формате "55.755864, 37.617698" (если нет — пустая строка).
   - "Остальное N" — остальной текст, который не попал в адрес, дату, время или координаты.
3. Адрес формировать с учётом паттернов городов и населённых пунктов (г., гор., город, д., деревня, пос., респ., республика и т.п.).
4. НЕ выдавать никаких комментариев, пояснений, описаний — только ЧИСТЫЙ JSON.

Формат вывода строго:

{{
  "Выгрузка": [
    {{
      "Выгрузка 1": "...",
      "Дата 1": "...",
      "Время 1": "...",
      "Координаты 1": "...",
      "Остальное 1": "..."
    }},
    {{
      "Выгрузка 2": "...",
      "Дата 2": "...",
      "Время 2": "...",
      "Координаты 2": "...",
      "Остальное 2": "..."
    }}
  ]
}}

Если в тексте есть погрузки, то ключ будет "Погрузка" и аналогичный формат.

---

Начинай обработку текста после метки <<TEXT>>.
"""

    prompt = prompt_template.replace("<<TEXT>>", user_text)

    result = ask_ollama(prompt)
    print("Распарсенный ответ от модели:")
    print(json.dumps(result, ensure_ascii=False, indent=2))

    if "Выгрузка" in result:
        for item in result["Выгрузка"]:
            for key, value in item.items():
                print(f"{key}: {value}")
