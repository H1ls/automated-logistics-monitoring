import os
import sys
import json
from threading import Lock
from PyQt6.QtCore import QTimer
from concurrent.futures import ThreadPoolExecutor
from PyQt6.QtWidgets import (QApplication, QWidget, QVBoxLayout, QHBoxLayout, QTableWidget, QPushButton, QTextEdit,
                             QLabel, QHeaderView, QAbstractItemView, QMessageBox)
from Navigation_Bot.bots.googleSheetsManager import GoogleSheetsManager
from Navigation_Bot.core.jSONManager import JSONManager
from Navigation_Bot.gui.settingsDialogManager import SettingsDialogManager
from Navigation_Bot.gui.tableManager import TableManager
from Navigation_Bot.navigationProcessor import NavigationProcessor
from Navigation_Bot.core.paths import INPUT_FILEPATH, ID_FILEPATH

# INPUT_FILEPATH = "../config/selected_data.json"
# ID_FILEPATH = "../config/Id_car.json"

"""TODO:1.–î—É–±–ª–∏—Ä—É–µ—Ç—Å—è self.json_data -> –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤:TableManager NavigationProcessor
         –ù–æ –≤ load_from_google() -> self.json_data = self.processor.gsheet.load_from_google()
         –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
             –°–¥–µ–ª–∞—Ç—å self.json_data —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º (DataContext –∏–ª–∏ JsonDataStore) 
             –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–≥–æ –∫–∞–∫ –æ–±—ä–µ–∫—Ç.
            
        2.–ü–µ—Ä–µ–∫–∏–Ω—É—Ç—å _submit_processor_row –≤ NavigationProcessor"""


class NavigationGUI(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Navigation Manager")
        self.resize(1400, 800)

        self.executor = ThreadPoolExecutor(max_workers=1)
        self._log_enabled = True
        self.json_lock = Lock()
        self.updated_rows = []
        self._single_row_processing = True

        self.json_data = JSONManager(INPUT_FILEPATH, log_func=self.log).load_json() or []

        self.init_ui()

        self.settings_ui = SettingsDialogManager(self)

        self.table_manager = TableManager(
            table_widget=self.table,
            json_data=self.json_data,
            log_func=self.log,
            on_row_click=self._submit_processor_row,
            on_edit_id_click=self.open_id_editor
        )
        self.gsheet = GoogleSheetsManager(log_func=self.log)
        self.processor = NavigationProcessor(
            json_data=self.json_data,
            logger=self.log,
            # gsheet=GoogleSheetsManager(log_func=self.log),
            gsheet=self.gsheet,
            filepath=str(INPUT_FILEPATH),
            display_callback=self.table_manager.display,
            single_row=self._single_row_processing,
            updated_rows=self.updated_rows
        )

        self.connect_signals()
        self.table_manager.display()

    def init_ui(self):
        layout = QVBoxLayout()

        # –í–µ—Ä—Ö–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        self.btn_wialon_combo = QPushButton("Wialon ‚öôÔ∏è")
        self.btn_yandex_combo = QPushButton("–Ø.–ö–∞—Ä—Ç—ã ‚öôÔ∏è")
        self.btn_load_google = QPushButton("–ó–∞–≥—Ä—É–∑–∏—Ç—å –ó–∞–¥–∞—á–∏")
        self.btn_google_settings = QPushButton("Google ‚öôÔ∏è")
        self.btn_clear_json = QPushButton("üóë –û—á–∏—Å—Ç–∏—Ç—å JSON")
        self.btn_process_all = QPushButton("‚ñ∂ –ü—Ä–æ–±–µ–∂–∞—Ç—å –≤—Å–µ –¢–°")
        self.btn_refresh_table = QPushButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å")

        for btn in [
            self.btn_wialon_combo, self.btn_yandex_combo, self.btn_load_google,
            self.btn_google_settings, self.btn_process_all, self.btn_refresh_table,
            self.btn_clear_json
        ]:
            btn.setFixedHeight(28)
            btn.setFixedWidth(130)

        top = QHBoxLayout()
        top.addWidget(self.btn_wialon_combo)
        top.addWidget(self.btn_yandex_combo)
        top.addWidget(self.btn_load_google)
        top.addWidget(self.btn_google_settings)
        top.addWidget(self.btn_process_all)
        top.addWidget(self.btn_refresh_table)
        top.addWidget(self.btn_clear_json)

        self.table = QTableWidget()
        self.table.setColumnCount(9)
        self.table.setHorizontalHeaderLabels([
            "", "id", "–¢–°", "–ö–ê", "–ü–æ–≥—Ä—É–∑–∫–∞", "–í—ã–≥—Ä—É–∑–∫–∞", "–≥–µ–æ", "–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è", "–ó–∞–ø–∞—Å"
        ])

        self.table.setWordWrap(True)
        # self.table.setWordWrap(True)
        self.table.setColumnWidth(0, 40)
        self.table.setColumnWidth(2, 85)  # –¢–°
        self.table.setColumnWidth(3, 70)  # –ö–ê
        self.table.setColumnWidth(4, 500)
        self.table.setColumnWidth(5, 500)
        self.table.horizontalHeader().setSectionResizeMode(3, QHeaderView.ResizeMode.Interactive)
        self.table.horizontalHeader().setSectionResizeMode(4, QHeaderView.ResizeMode.Interactive)
        self.table.horizontalHeader().setSectionResizeMode(5, QHeaderView.ResizeMode.Interactive)

        self.table.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        self.table.setEditTriggers(QAbstractItemView.EditTrigger.DoubleClicked)
        self.table.setColumnHidden(1, True)

        self.log_box = QTextEdit()
        self.log_box.setReadOnly(True)
        self.log_box.setFixedHeight(150)

        layout.addLayout(top)
        layout.addWidget(self.table)
        layout.addWidget(QLabel("–õ–æ–≥:"))
        layout.addWidget(self.log_box)

        self.setLayout(layout)

    def connect_signals(self):
        self.table.cellDoubleClicked.connect(self.table_manager.edit_cell_content)
        self.table.itemChanged.connect(self.table_manager.save_to_json_on_edit)

        self.btn_process_all.clicked.connect(self.processor.process_all)
        self.btn_refresh_table.clicked.connect(self.table_manager.display)

        self.btn_wialon_combo.clicked.connect(self.settings_ui.open_wialon_settings)
        self.btn_yandex_combo.clicked.connect(self.settings_ui.open_yandex_settings)
        self.btn_google_settings.clicked.connect(self.settings_ui.open_google_settings)
        self.btn_clear_json.clicked.connect(self.confirm_clear_json)
        self.btn_load_google.clicked.connect(self.load_from_google)

    def _submit_processor_row(self, row_idx):
        if 0 <= row_idx < len(self.json_data):
            self.executor.submit(self.processor.process_row_wrapper, row_idx)
        else:
            self.log(f"‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {row_idx} –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫.")

    def log(self, message: str):
        if self._log_enabled:
            self.log_box.append(message)

    def load_json(self):
        if os.path.exists(str(INPUT_FILEPATH)):
            with open(str(INPUT_FILEPATH), "r", encoding="utf-8") as f:
                try:
                    self.json_data = json.load(f)
                    print("‚úÖ JSON –∑–∞–≥—Ä—É–∂–µ–Ω:", self.json_data)
                except json.JSONDecodeError:
                    self.log("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON")
                    self.json_data = []

    def confirm_clear_json(self):
        reply = QMessageBox.question(
            self,
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏",
            "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON?\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )

        if reply == QMessageBox.StandardButton.Yes:
            JSONManager().save_in_json([], str(INPUT_FILEPATH))
            self.log("üóë JSON –æ—á–∏—â–µ–Ω.")
            self.load_json()
            self.table_manager.display()

    def open_id_editor(self, row):
        from Navigation_Bot.gui.trackingIdEditor import TrackingIdEditor
        car = self.json_data[row]

        dialog = TrackingIdEditor(car, log_func=self.log, parent=self)
        if dialog.exec():
            JSONManager().save_in_json(self.json_data, str(INPUT_FILEPATH))
            self.table_manager.display()

    def load_from_google(self):
        self.log("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets (–≤ —Ñ–æ–Ω–µ)...")

        def background_task():
            try:
                # üîÅ –ò–º–ø–æ—Ä—Ç –≤–Ω—É—Ç—Ä–∏ –ø–æ—Ç–æ–∫–∞
                from Navigation_Bot.bots.googleSheetsManager import GoogleSheetsManager
                from Navigation_Bot.bots.dataCleaner import DataCleaner
                from Navigation_Bot.core.jSONManager import JSONManager

                # gsheet = GoogleSheetsManager(log_func=self.log)
                data = self.gsheet.load_data()

                with self.json_lock:
                    self.gsheet.refresh_name(data, str(INPUT_FILEPATH))

                    cleaner = DataCleaner(JSONManager(), str(INPUT_FILEPATH), str(ID_FILEPATH), log_func=self.log)
                    cleaner.clean_vehicle_names()
                    cleaner.add_id_to_data()
                    cleaner.start_clean()

                QTimer.singleShot(0, self.reload_and_show)
                print("–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞")
            except Exception as e:
                QTimer.singleShot(0, lambda: self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}"))

        self.executor.submit(background_task)

    def reload_and_show(self):
        with self.json_lock:
            self.load_json()
            self.json_data.sort(key=lambda x: x.get("index", 99999))

        self.table_manager.display()
        self.log("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


if __name__ == "__main__":
    app = QApplication(sys.argv)
    gui = NavigationGUI()
    gui.show()
    sys.exit(app.exec())
