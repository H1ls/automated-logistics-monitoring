from Navigation_Bot.Gui.genericSettingsDialog import GenericSettingsDialog
from Navigation_Bot.googleSheetsManager import GoogleSheetsManager
from Navigation_Bot.navigationBot import NavigationBot
from Navigation_Bot.mapsBot import MapsBot


class SettingsController:
    def __init__(self, parent, log_func=None):
        self.parent = parent
        self.log = log_func or print
        self.gsheet = parent.gsheet  # –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä

    def open_wialon_settings(self):
        fields = {
            "search_input_xpath": ("XPath –ø–æ–∏—Å–∫–∞", str),
            "unit_block_xpath": ("XPath –±–ª–æ–∫–∞ –¢–°", str),
            "address_selector": ("CSS –∞–¥—Ä–µ—Å–∞", str),
            "copy_button_selector": ("CSS –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç", str),
            "speed_selector": ("CSS —Å–∫–æ—Ä–æ—Å—Ç–∏", str)
        }
        dlg = GenericSettingsDialog(
            parent=self.parent,
            title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Wialon",
            section_index=1,
            section_key="wialon_selectors",
            custom_key="NEW_SELECTORS",
            default_key="DEFAULT_SELECTORS",
            fields=fields,
            file_path="../config/config.json"
        )
        if dlg.exec():
            self.log("üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Wialon —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
            if hasattr(self.parent, "driver_manager") and hasattr(self.parent.driver_manager, "driver"):
                try:
                    self.parent.navibot = NavigationBot(self.parent.driver_manager.driver, self.log)
                    self.log("üîÅ NavigationBot –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω")
                except Exception as e:
                    msg = str(e).splitlines()[0]
                    self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ NavigationBot: {msg}")
            else:
                self.log("‚ÑπÔ∏è NavigationBot –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –¥—Ä–∞–π–≤–µ—Ä–∞")

    def open_yandex_settings(self):
        fields = {
            "route_button": ("CSS –∫–Ω–æ–ø–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞", str),
            "close_route": ("CSS –∑–∞–∫—Ä—ã—Ç–∏—è –º–∞—Ä—à—Ä—É—Ç–∞", str),
            "from_input": ("XPath –û—Ç–∫—É–¥–∞", str),
            "to_input": ("XPath –ö—É–¥–∞", str),
            "route_item": ("CSS –†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ä—à—Ä—É—Ç–∞", str),
            "route_duration": ("CSS –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", str),
            "route_distance": ("CSS —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è", str)
        }
        dlg = GenericSettingsDialog(
            parent=self.parent,
            title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ø.–ö–∞—Ä—Ç",
            section_index=2,
            section_key="yandex_selectors",
            custom_key="YANDEX_NEW_SELECTORS",
            default_key="YANDEX_DEFAULT_SELECTORS",
            fields=fields,
            file_path="../config/config.json"
        )
        if dlg.exec():
            self.log("üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ø.–ö–∞—Ä—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
            if hasattr(self.parent, "driver_manager") and hasattr(self.parent.driver_manager, "driver"):
                try:
                    self.parent.mapsbot = MapsBot(self.parent.driver_manager.driver, self.log)
                    self.log("üîÅ MapsBot –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω")
                except Exception as e:
                    msg = str(e).splitlines()[0]
                    self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ MapsBot: {msg}")
            else:
                self.log("‚ÑπÔ∏è MapsBot –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –¥—Ä–∞–π–≤–µ—Ä–∞")

    def open_google_settings(self):
        fields = {
            "creds_file": ("–ü—É—Ç—å –∫ creds.json", str),
            "sheet_id": ("ID —Ç–∞–±–ª–∏—Ü—ã", str),
            "worksheet_index": ("–ò–Ω–¥–µ–∫—Å –ª–∏—Å—Ç–∞", int),
            "column_index": ("–ò–Ω–¥–µ–∫—Å –∫–æ–ª–æ–Ω–∫–∏", int),
            "file_path": ("–ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É", str)
        }

        dlg = GenericSettingsDialog(
            parent=self.parent,
            title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google",
            section_index=3,
            section_key="google_config",
            custom_key="custom",
            default_key="default",
            fields=fields,
            file_path="../config/config.json"
        )

        if dlg.exec():
            self.log("üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
            try:
                self.parent.gsheet = GoogleSheetsManager(log_func=self.log)
                self.log("üîÅ GoogleSheetsManager –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω")
            except Exception as e:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ GoogleSheetsManager: {e}")
